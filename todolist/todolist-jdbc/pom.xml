<?xml version="1.0" encoding="UTF-8"?>
<!--
    JBoss, Home of Professional Open Source
    Copyright 2014, Red Hat, Inc. and/or its affiliates, and individual
    contributors by the @authors tag. See the copyright.txt in the
    distribution for a full listing of individual contributors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.openshift.quickstarts</groupId>
    <artifactId>todolist-jdbc</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>OpenShift Quickstarts: Todo List: JDBC</name>
    <description>Todo list</description>

    <url>http://jboss.org/jbossas</url>
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <distribution>repo</distribution>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
        </license>
    </licenses>

    <properties>
        <!-- Explicitly declaring the source encoding eliminates the following message: -->
        <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
            resources, i.e. build is platform dependent! -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- JBoss dependency versions -->
        <version.jboss.maven.plugin>7.4.Final</version.jboss.maven.plugin>

        <!-- other plugin versions -->
        <version.surefire.plugin>2.10</version.surefire.plugin>
        <version.war.plugin>2.1.1</version.war.plugin>

        <!-- maven-compiler-plugin -->
        <maven.compiler.target>1.6</maven.compiler.target>
        <maven.compiler.source>1.6</maven.compiler.source>

        <jboss-servlet-api_3.0_spec.version>1.0.0.Final</jboss-servlet-api_3.0_spec.version>
        <skipTests>false</skipTests>
    </properties>


    <dependencyManagement>
    </dependencyManagement>

    <dependencies>
    
        <dependency>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_3.0_spec</artifactId>
            <version>${jboss-servlet-api_3.0_spec.version}</version>
            <scope>provided</scope>
        </dependency>
        
        <!--  
        <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-6.0</artifactId>
            <version>1.0.0.Final</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
        -->
        
        <dependency>
		  <groupId>junit</groupId>
		  <artifactId>junit</artifactId>
		  <version>4.11</version>
		  <scope>test</scope>
		</dependency>
		
		<!-- Tomcat Container  
		<dependency>
		  <groupId>org.apache.openejb</groupId>
		  <artifactId>javaee-api</artifactId>
		  <version>6.0-6</version>
		  <scope>provided</scope>
		</dependency>-->
        
    	<!--  JBoss Container  -->
        <!--  <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-arquillian-container-remote</artifactId>
            <version>7.1.1.Final</version>
            <scope>test</scope>
        </dependency>-->
        
        <dependency>
		    <groupId>org.arquillian.container</groupId>
		    <artifactId>arquillian-container-chameleon</artifactId>
		    <version>1.0.0.Final-SNAPSHOT</version>
		    <scope>test</scope>
		</dependency>
		
		<!--  Arquillian BOM -->
		<dependency>
	      <groupId>org.jboss.arquillian</groupId>
	      <artifactId>arquillian-bom</artifactId>
	      <version>1.1.11.Final</version> 
	      <scope>import</scope>
	      <type>pom</type>
	    </dependency>
	    
	    <!--  Arquillian unit test integration dependency -->
	    <dependency>
		  <groupId>org.jboss.arquillian.junit</groupId>
		  <artifactId>arquillian-junit-container</artifactId>
		  <version>1.1.11.Final</version>
		  <scope>test</scope>
		</dependency>
		
		<dependency>
	        <groupId>org.jboss.arquillian.core</groupId>
	        <artifactId>arquillian-core-api</artifactId>
	        <version>1.1.11.Final</version>
	        <scope>test</scope>
		</dependency>
		
	    <dependency>
	        <groupId>org.jboss.arquillian.core</groupId>
	        <artifactId>arquillian-core-api</artifactId>
	        <version>1.1.11.Final</version>
	        <scope>test</scope>
		</dependency>
		
		<dependency>
		  <groupId>org.jboss.shrinkwrap</groupId>
		  <artifactId>shrinkwrap-depchain-java7</artifactId>
		  <version>1.2.2</version>
		  <type>pom</type>
		</dependency>
		
		<!-- <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
   	        <version>1.1.11.Final</version>
        </dependency> -->
        
        <dependency>
		    <groupId>org.arquillian.container</groupId>
		    <artifactId>arquillian-container-chameleon</artifactId>
		    <version>1.0.0.Alpha7</version>
            <scope>test</scope>
		</dependency>
        
    </dependencies>

    <build>
        <!-- Maven will append the version to the finalName (which is the name 
            given to the generated war, and hence the context root) -->
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>${version.war.plugin}</version>
                <configuration>
                    <!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <!-- The JBoss AS plugin deploys your war to a local JBoss EAP container -->
            <!-- To use, run: mvn package jboss-as:deploy -->
            <plugin>
                <groupId>org.jboss.as.plugins</groupId>
                <artifactId>jboss-as-maven-plugin</artifactId>
                <version>${version.jboss.maven.plugin}</version>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- The default profile skips all tests, though you can tune it to run just unit tests based on a custom pattern -->
            <!-- Separate profiles are provided for running all tests, including Arquillian tests that execute in the specified container -->
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${version.surefire.plugin}</version>
                        <configuration>
                            <skip>false</skip>
					        <excludes>
					            <exclude>**/*IntegrationTest.java</exclude>
					        </excludes>                        
				        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
			<!--  integration tests  -->
            <id>it</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${version.surefire.plugin}</version>
                        <configuration>
                            <skip>false</skip>
					        <excludes>
					            <exclude>**/*UnitTest.java</exclude>
					        </excludes>                        
				        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- When built in OpenShift the 'openshift' profile will be used when invoking mvn. -->
            <!-- Use this profile for any OpenShift specific customization your app will need. -->
            <!-- By default that is to put the resulting archive into the 'deployments' folder. -->
            <!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
            <id>openshift</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>${version.war.plugin}</version>
                        <configuration>
                            <outputDirectory>deployments</outputDirectory>
                            <warName>ROOT</warName>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>
</project>
